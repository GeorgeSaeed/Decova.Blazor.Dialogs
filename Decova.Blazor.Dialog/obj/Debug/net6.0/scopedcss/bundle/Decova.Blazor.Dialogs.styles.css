/* _content/Decova.Blazor.Dialogs/Component1.razor.rz.scp.css */
.my-component[b-1xgmeztr2l] {
    border: 2px dashed red;
    padding: 1em;
    margin: 1em 0;
    background-image: url('background.png');
}
/* _content/Decova.Blazor.Dialogs/Dialog.razor.rz.scp.css */
.layout[b-ng4lp22qyv] {
    position: fixed;
    overflow-y: scroll;
    overflow-x: hidden;
    display: grid;
    visibility: collapse;
    top: 0px;
    left: 0px;
    width: 100vw;
    height: 100vh;
    z-index: 1000;
    grid-template-columns: 1fr auto 1fr;
    grid-template-rows: 1fr auto 1fr;
    grid-template-areas: "a0 a1 a2"
        "b0 x b2"
        "c0 c1 c2";
}

.curtain[b-ng4lp22qyv] {
    position: fixed;
    top: 0;
    left: 0;
    background-color: #000;
    width: 100vw;
    height: 100vh;
}

.box[b-ng4lp22qyv] {
    margin: 1em;
    display: grid;
    position: relative;
    grid-area: x;
    width: auto;
    height: auto;
    min-width: 200px;
    min-height: 100px;
    filter: drop-shadow(2mm 2mm 2mm #010101);

}

@keyframes curtain-animate-in-b-ng4lp22qyv {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 0.7;
    }
}
.curtain.animate-in[b-ng4lp22qyv] {
    animation-name: curtain-animate-in-b-ng4lp22qyv;
    animation-duration: 500ms;
    animation-fill-mode: forwards;
    animation-timing-function: ease-in-out;
}

@keyframes curtain-animate-out-b-ng4lp22qyv {
    0% {
        opacity: 0.7;
    }

    100% {
        opacity: 0;
    }
}
.curtain.animate-out[b-ng4lp22qyv] {
/*    animation-name: curtain-animate-out;
    animation-duration: 10ms;
    animation-fill-mode: forwards;
    animation-timing-function: ease-in-out;*/
    opacity: 0;
}


.layout.open[b-ng4lp22qyv] {
    visibility: visible;
}

@keyframes layout-animate-out-b-ng4lp22qyv {
    0% {
        visibility: visible;
    }

    100% {
        visibility: collapse;
    }
}

.layout.closed[b-ng4lp22qyv] {
    animation: layout-animate-out-b-ng4lp22qyv;
    animation-duration: 500ms;
    animation-fill-mode: forwards;
    animation-timing-function: ease-out;
}

@keyframes dialog-box-animate-in-b-ng4lp22qyv {
    0% {
        transform: translateY(-90vh) scale(0.4);
    }

    60% {
        transform: rotate(-5deg) scale(0.7);
    }

    100% {
        transform: translateY(0vh) scale(1) rotate(0deg);
    }
}
.box.animate-in[b-ng4lp22qyv] {
    animation-name: dialog-box-animate-in-b-ng4lp22qyv;
    animation-duration: 500ms;
    animation-fill-mode: forwards;
    animation-timing-function: ease-out;
}

@keyframes dialog-box-animate-out-b-ng4lp22qyv {
    0% {
        transform: translateY(0) scale(1) rotate(0deg);
    }

    40% {
        transform: rotate(-5deg) scale(0.7);
    }

    100% {
        transform: translateY(-100vh) scale(0.4) rotate(15deg);
    }
}
.box.animate-out[b-ng4lp22qyv] {
    animation-name: dialog-box-animate-out-b-ng4lp22qyv;
    animation-duration: 500ms;
    animation-fill-mode: forwards;
    animation-timing-function: ease-in-out;
}
/*# sourceMappingURL=Dialog.css.map */



/**###################################################################################*/
/**###################################################################################*/
/**###################################################################################*/




.curtain-busy-background[b-ng4lp22qyv] {
    animation: slide-b-ng4lp22qyv 1.5s ease-in-out infinite alternate;
    background-image: linear-gradient(-60deg, #111 50%, #000 50%);
    bottom: 0;
    left: -50%;
    opacity: .5;
    position: fixed;
    right: -50%;
    top: 0;
    z-index: -1;
}

/*.bg2 {
    animation-direction: alternate-reverse;
    animation-duration: 4s;
}

.bg3 {
    animation-duration: 5s;
}
*/
.content[b-ng4lp22qyv] {
    background-color: rgba(255,255,255,.8);
    border-radius: .25em;
    box-shadow: 0 0 .25em rgba(0,0,0,.25);
    box-sizing: border-box;
    left: 50%;
    padding: 10vmin;
    position: fixed;
    text-align: center;
    top: 50%;
    transform: translate(-50%, -50%);
}

h1[b-ng4lp22qyv] {
    font-family: monospace;
}

@keyframes slide-b-ng4lp22qyv {
    0% {
        transform: translateX(-25%);
    }

    100% {
        transform: translateX(25%);
    }
}
